#ifndef ROUTECOLLECTOR_H_1234
#define ROUTECOLLECTOR_H_1234
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <stdio.h>
#include <iostream>
#include <cstring>
using namespace std;



/*			ROUTECOLLECTOR	CLASS
*
* 	name:				RouteCollector
* 	description:	It is the base class that allows to handle a route collector in the internet.
*						In particular, it allows to generate the BGP updates' urls according the actual time.
* 	variables:		lastTm	-	The last timestamp generated.
*						lastUrl	-	The last url generated that points to the '.bz2' file to download.
*						timer		-	The period whit which the BGP updates are generated by the route collector.
*						rcName	-	The name that identifies the route collector.
*						bool		-	Boolean value specifies if the 'lastUrl' file has been downloaded yet.
* 	methods:			normalize	-	it normalizes the timestamp according the route collector's period.
*						getUrl		-	it returns the last url generated.
*						precUrl		-	it generates the url relative to the timestamp following the current one.
*						nextUrl		-	it generates the url relative to the timestamp preceding the current one.
*/
class RouteCollector
{
	protected:	
					tm lastTm;
					void normalize(char*, char*, char*, char*, char*, int&, bool = true);

	public:	string lastUrl;
				int timer;				
				string rcName;
				bool valid;
				RouteCollector(string, int, tm*);
				virtual void getUrl(bool = true) = 0;
				void precUrl();
				void nextUrl(bool = true);
};

#endif
